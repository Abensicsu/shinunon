@rendermode InteractiveServer

@inject SHcx cx;
@inject CustomHttpClientService Http
@inject ExamExecutionService ExamExecutionService
@inject NavigationManager Navigation

@using DataModels.Data
@using DataModels.Models
@using DataModels.Services
@using System.Net.Http.Json

@page "/review-exam/{userId:int}"

<h3>Books List</h3>

@if (books == null)
{
    <p><em>Loading...</em></p>
}
else if (selectedBook == null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Select</th>
                <th>Book Name</th>
                <th>Book Type</th>
                <th>Book Order</th>
                <th>Subjects</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in books)
            {
                <tr>
                    <td>
                        <button @onclick="() => SelectBook(book)">Select</button>
                    </td>
                    <td>@book.BookName</td>
                    <td>@book.BookType</td>
                    <td>@book.BookOrder</td>
                    <td>
                        @if (book.Subjects != null && book.Subjects.Any())
                        {
                            <ul>
                                @foreach (var subject in book.Subjects)
                                {
                                    <li>@subject.SubjectName</li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p>No subjects available</p>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h4>Selected Book: @selectedBook.BookName</h4>
    <div>
        <label>From Subject:</label>
        <select @bind="fromSubjectId">
            @foreach (var subject in selectedBook.Subjects)
            {
                <option value="@subject.SubjectId">@subject.SubjectName</option>
            }
        </select>
    </div>
    <div>
        <label>To Subject:</label>
        <select @bind="toSubjectId">
            @foreach (var subject in selectedBook.Subjects)
            {
                <option value="@subject.SubjectId">@subject.SubjectName</option>
            }
        </select>
    </div>
    <button @onclick="StartLearning">Start Learning</button>
}


@code {
    [Parameter]
    public int userId { get; set; } = 3;

    [Parameter]
    public int examExecutionId { get; set; }

    public List<Book> books;
    public Book selectedBook;
    public int fromSubjectId;
    public int toSubjectId;
    public ExamExecution exam;

    protected override async Task OnInitializedAsync()
    {
        books = await Http.GetAsync<List<Book>>("api/Book/AllBooksIncludeSubjects");
    }

    private void SelectBook(Book book)
    {
        selectedBook = book;
        fromSubjectId = book.Subjects.FirstOrDefault().SubjectId;
        toSubjectId = book.Subjects.LastOrDefault().SubjectId;
    }

    private void StartLearning()
    {
        exam = ExamExecutionService.createExamExecutionBySubjectsAndExamType(userId, fromSubjectId, toSubjectId, ExamTypeEnum.ReviewExam);
        ExamExecutionService.SelectQuestionsCreateExamAnswers(exam);
        examExecutionId = exam.ExamExecutionId;
        Navigation.NavigateTo($"/exam/{examExecutionId}");
    }
}
