@rendermode InteractiveServer

<PageTitle>Books</PageTitle>

@inject SHcx cx;
@inject CustomHttpClientService Http
@inject SefariaService SefariaService

@using DataModels.Data
@using DataModels.Models
@using DataModels.Services
@using Newtonsoft.Json.Linq

@page "/books"

<h3>BooksComponent</h3>

@* @if (books == null)
{
    <p><em>Loading...</em></p>
}
else if (selectedBook == null)
{
    <h4>Select a Book</h4>
    <ul>
        @foreach (var book in books)
        {
            <li @onclick="() => LoadBookTopics(book)">@book.HebrewBookName</li>
        }
    </ul>
}
else if (selectedSubject == null)
{
    <h4>Select a Topic in @selectedBook.HebrewBookName</h4>
    <ul>
        @foreach (var topic in selectedBook.Subjects)
        {
            <li @onclick="() => SelectTopic(topic)">@topic.SubjectName</li>
        }
    </ul>
    <button @onclick="DeselectBook">Back to Books</button>
}
@* else
{
    <h4>Topic Detail: @selectedSubject.SubjectName</h4>
    <p>@selectedSubject.SubjectText?.SubjectTextContent</p>
    <button @onclick="DeselectTopic">Back to Topics</button>
    <button @onclick="DeselectBook">Back to Books</button>
} *@
@* 
else
{
    <h4>Topic Detail: @selectedSubject.SubjectName</h4>
    // <p>@selectedSubject.SubjectText?.SubjectTextContent</p>
    <ul style="direction:rtl;font-size:xx-large">
        @foreach (var item in TextData)
        {
            <li>@((MarkupString)item)</li>
        }
    </ul>
    <button @onclick="DeselectTopic">Back to Topics</button>
    <button @onclick="DeselectBook">Back to Books</button>
}

<button @onclick="readDataFromSefaria">read data</button>



@code {
    public List<Book> books;
    public Book selectedBook;
    public Subject selectedSubject;

    public List<string> TextData => selectedSubject != null ?
                                 JArray.Parse(selectedSubject.SubjectText.SubjectTextContent)
                                .Select(x=>x.ToString()).ToList() : new List<string>();


    protected override async Task OnInitializedAsync()
    {
        books = await Http.GetAsync<List<Book>>("api/Book/AllBooksIncludeSubjects");
    }

    public void SelectBook(Book book)
    {
        selectedBook = book;
    }

    public void DeselectBook()
    {
        selectedBook = null;
        selectedSubject = null;
    }

    public async Task SelectTopic(Subject topic)
    {
        if (topic.SubjectText == null)
        {
            topic.SubjectText = await Http.GetAsync<SubjectText>("api/Book/GetSubjectText/" + topic.SubjectId);
        }
        selectedSubject = topic;
    }

    public void DeselectTopic()
    {
        selectedSubject = null;
    }

    public async Task readDataFromSefaria()
    {
        await SefariaService.FetchAndSaveAllBooks();
    }
}
