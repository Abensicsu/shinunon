@rendermode InteractiveServer

@page "/exam-results/{examExecutionId:int}"

@inject SHcx cx
@inject CustomHttpClientService Http
@inject LocalStorageService LocalStorageService
@inject IJSRuntime JS
@inject NavigationManager Navigation

@using System.Text.Json
@using ShWeb.Components.BAServices
@using DataModels.Data
@using DataModels.Models

<h3>Exam Results</h3>

@if (examExecution != null)
{
    <div class="results-container">
        <div class="results-summary">
            <div class="summary-item incorrect">
                <span class="number">@examExecution.WrongAnswers</span>
                <span class="label">Wrong Answers</span>
            </div>
            @* <div class="summary-item partially-correct">
        <span class="number">@examExecution.PartiallyCorrectAnswers</span>
        <span class="label">Partially Correct Answers</span>
        </div> *@
            <div class="summary-item correct">
                <span class="number">@examExecution.CorrectAnswers</span>
                <span class="label">Correct Answers</span>
            </div>
            <div class="summary-item success-rate">
                <span class="number">@((examExecution.CorrectAnswers * 100) / questionNum)%</span>
                <span class="label">success-rate</span>
            </div>
        </div>
        <div class="timers">
            <div class="timer">
                <span class="label">Total Time</span>
                <span class="time">@totalTime.ToString(@"hh\:mm\:ss")</span>
            </div>
            <div class="timer">
                <span class="label">End Time</span>
                <span class="time">@examExecution.EndTime.Value.TimeOfDay.ToString(@"hh\:mm\:ss")</span>

            </div>
        </div>
        @* <div class="calendar">
            <h5>question @i of @questionNum</h5>
            <div class="calendar-grid">
                @for (int i = 0; i < questionNum; i++)
                {
                    var answer = examExecution.ExamAnswers.ElementAt(i);
                    <div class="calendar-item @(answer.Answer.IsCorrectAnswer ? "correct" : "incorrect")">
                        <span>@(i + 1)</span>
                    </div>
                }
            </div>
        </div> *@
        <InnerExamComponent Permission=false examExecutionId=examExecutionId />
    </div>
}

<style>
    .results-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
    }

    .results-summary {
        display: flex;
        justify-content: space-around;
        width: 100%;
        margin-bottom: 20px;
    }

    .summary-item {
        text-align: center;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .summary-item.correct {
            background-color: #e0f7fa;
        }

        .summary-item.partially-correct {
            background-color: #fff9c4;
        }

        .summary-item.incorrect {
            background-color: #ffcdd2;
        }

        .summary-item.success-rate {
            background-color: #c8e6c9;
        }

    .number {
        font-size: 24px;
        font-weight: bold;
    }

    .label {
        font-size: 14px;
    }

    .timers {
        display: flex;
        justify-content: space-around;
        width: 100%;
        margin-bottom: 20px;
    }

    .timer {
        text-align: center;
        padding: 10px;
        border-radius: 5px;
        background-color: #f5f5f5;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .time {
        font-size: 24px;
        font-weight: bold;
    }

    .label {
        font-size: 14px;
    }

    .calendar {
        width: 100%;
    }

    .calendar-grid {
        display: grid;
        grid-template-columns: repeat(6, 1fr);
        gap: 10px;
    }

    .calendar-item {
        text-align: center;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .calendar-item.correct {
            background-color: #e0f7fa;
        }

        .calendar-item.partially-correct {
            background-color: #fff9c4;
        }

        .calendar-item.incorrect {
            background-color: #ffcdd2;
        }
</style>

@code {
    [Parameter]
    public int examExecutionId { get; set; }

    private ExamExecution examExecution;
    public int questionNum;
    public int i = 0;
    public TimeSpan totalTime;

    protected override async Task OnInitializedAsync()
    {
        examExecution = await Http.GetAsync<ExamExecution>($"api/Exam/ExamExecution?examExecutionId={examExecutionId}");
        questionNum = examExecution.ExamAnswers.Count;
        // totalTime = examExecution.ExamAnswers.Sum()
        totalTime = TimeSpan.Zero;
        foreach (var answer in examExecution.ExamAnswers)
        {
            totalTime = totalTime.Add(answer.TimeSpent);
        }
    }
}